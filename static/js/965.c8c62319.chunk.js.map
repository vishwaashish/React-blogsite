{"version":3,"file":"static/js/965.c8c62319.chunk.js","mappings":"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","sources":["Component/Social share/SocialShare.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","../node_modules/framer-motion/dist/es/utils/wrap.mjs","../node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","../node_modules/framer-motion/dist/es/animation/sequence/create.mjs","../node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","Component/CardStyle/CardStyle4Blog.js","../node_modules/framer-motion/dist/es/animation/hooks/use-animate.mjs","pages/Post/Blog.js"],"sourcesContent":["import React from \"react\";\r\nimport { IconLink } from \"../AnimateClick\";\r\n\r\nconst SocialShare = (props) => {\r\n  const { title, description, image_lg } = props?.shareparam;\r\n  const currenthref = window.location.href;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sticky-social-share\">\r\n        <IconLink\r\n          href={`https://www.facebook.com/sharer/sharer.php?u=${currenthref}&quote=${\r\n            !!title ?? \"\"\r\n          }`}\r\n        >\r\n          <i className=\"fab fa-facebook\" />\r\n        </IconLink>\r\n        <IconLink\r\n          href={`http://twitter.com/share?text=${\r\n            title ?? \"\"\r\n          }&url=${currenthref}`}\r\n        >\r\n          <i className=\"fab fa-twitter\" />\r\n        </IconLink>\r\n        <IconLink href={currenthref}>\r\n          <i className=\"fa fa-rss\"></i>\r\n        </IconLink>\r\n        <IconLink\r\n          href={`\"https://www.pinterest.com/pin/create/button/?url=${currenthref}&media=${\r\n            image_lg ?? \"\"\r\n          }&description=${description ?? \"\"}`}\r\n        >\r\n          <i className=\"fab fa-pinterest\" />\r\n        </IconLink>\r\n        <IconLink href={`https://wa.me/?text=${currenthref}`}>\r\n          <i className=\"fab fa-whatsapp\" />\r\n        </IconLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialShare;\r\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                allChildren.delete(key);\n                exitingChildren.delete(key);\n                // Remove this child from the present children\n                const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n                presentChildren.current.splice(removeIndex, 1);\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    presentChildren.current = filteredChildren;\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { frame } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","class GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n            prevTime = currentTime;\n            currentTime += maxDuration;\n        }\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { motion, useAnimate } from \"framer-motion\";\r\nimport React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst CardStyle4Blog = (props) => {\r\n  const [scope, animate] = useAnimate();\r\n  const { index = 0, posts } = props;\r\n  const { title, description, id, image, width } = posts;\r\n\r\n  useEffect(() => {\r\n    const startAnimation = async () => {\r\n      await animate(\r\n        scope.current,\r\n        {\r\n          y: [60, 0],\r\n          opacity: [0, 1],\r\n        },\r\n        {\r\n          duration: 0.5,\r\n          delay: index / 5,\r\n          type: \"spring\",\r\n          damping: 10,\r\n        }\r\n      );\r\n    };\r\n    startAnimation();\r\n  }, [animate, index, scope]);\r\n  return (\r\n    <motion.div\r\n      key={String(title + id)}\r\n      ref={scope}\r\n      whileTap={{ scale: 0.9 }}\r\n      className=\"card shadow-s card-hover\"\r\n      style={{ width: width }}\r\n    >\r\n      <NavLink to={\"/post/\" + id} state={props.posts}>\r\n        <div className=\"imageoveray\">\r\n          <i className=\"fa fa-link\" />\r\n          <img src={image} className=\"cardstyle-img-4\" alt={title} />\r\n        </div>\r\n      </NavLink>\r\n      <div className=\"cardstyle-body-3\">\r\n        <NavLink to={\"/post/\" + id} state={props.posts}>\r\n          <h4 className=\"card-title\">{title}</h4>\r\n        </NavLink>\r\n        <div\r\n          className=\"card-description\"\r\n          dangerouslySetInnerHTML={{ __html: description }}\r\n        ></div>\r\n        <NavLink to={\"/post/\" + id} state={props.posts}>\r\n          Read Article\r\n        </NavLink>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default React.memo(CardStyle4Blog);\r\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { createScopedAnimate } from '../animate.mjs';\n\nfunction useAnimate() {\n    const scope = useConstant(() => ({\n        current: null,\n        animations: [],\n    }));\n    const animate = useConstant(() => createScopedAnimate(scope));\n    useUnmountEffect(() => {\n        scope.animations.forEach((animation) => animation.stop());\n    });\n    return [scope, animate];\n}\n\nexport { useAnimate };\n","import { AnimatePresence, motion } from \"framer-motion\";\r\nimport React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Callgetapi } from \"../../Api/CallApi\";\r\nimport CardStyle4Blog from \"../../Component/CardStyle/CardStyle4Blog\";\r\nimport Loader from \"../../Component/Loader/Loader\";\r\nimport SocialShare from \"../../Component/Social share/SocialShare\";\r\n\r\nconst Blog = () => {\r\n  const { data, isLoading } = useQuery([\"post\"], Callgetapi, {\r\n    keepPreviousData: true,\r\n    staleTime: Infinity,\r\n    suspense: true,\r\n  });\r\n\r\n  if (isLoading) {\r\n    return <Loader h=\"100dvh\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Navbar /> */}\r\n      <SocialShare\r\n        shareparam={{\r\n          title: \"\",\r\n          description: \"\",\r\n          image_lg: \"\",\r\n          image: \"\",\r\n        }}\r\n      />\r\n      <motion.main\r\n        initial={{\r\n          opacity: 0,\r\n        }}\r\n        animate={{\r\n          opacity: 1,\r\n        }}\r\n        transition={{\r\n          duration: 0.3,\r\n          delay: 0.1,\r\n        }}\r\n        className=\"blog-post\"\r\n      >\r\n        <AnimatePresence>\r\n          {data?.map((item, index) => {\r\n            return (\r\n              <CardStyle4Blog\r\n                key={String(item.title + index)}\r\n                posts={item}\r\n                index={index}\r\n              />\r\n            );\r\n          })}\r\n        </AnimatePresence>\r\n      </motion.main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Blog);\r\n"],"names":["props","_title","_props$shareparam","shareparam","title","description","image_lg","currenthref","window","location","href","_jsx","children","_jsxs","className","IconLink","concat","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","prevProps","element","this","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","React","PopChild","_ref","id","useId","ref","useInsertionEffect","_size$current","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","_step","_iterator","_createForOfIteratorHelper","values","s","n","done","err","e","f","register","delete","undefined","forEach","_","PresenceContext","Provider","Map","useUnmountEffect","callback","useEffect","getChildKey","child","AnimatePresence","_ref$initial","exitBeforeEnter","_ref$presenceAffectsL","_ref$mode","invariant","forceRender","useContext","LayoutGroupContext","_useState","useState","_useState2","_slicedToArray","forcedRenderCount","setForcedRenderCount","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","map","_toConsumableArray","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","removeIndex","findIndex","presentChild","splice","cloneElement","resolveElements","elements","scope","selectorCache","_a","root","Boolean","querySelectorAll","Element","Array","from","GroupPlaybackControls","animations","filter","onResolve","onReject","Promise","all","then","catch","propName","newValue","getAll","time","setAll","speed","max","Math","duration","methodName","controls","runAll","createVisualElement","options","presenceContext","visualState","renderState","transform","transformOrigin","vars","attrs","latestValues","node","isSVGElement","SVGVisualElement","enableHardwareAcceleration","HTMLVisualElement","mount","visualElementStore","calcNextTime","next","prev","labels","startsWith","parseFloat","wrap","min","v","rangeSize","getEasingForSegment","easing","isEasingArray","addKeyframes","sequence","keyframes","offset","startTime","endTime","keyframe","at","removeItem","eraseKeyframes","mix","compareByTime","a","b","defaultSegmentEasing","createAnimationsFromSequence","_ref$defaultTransitio","defaultTransition","sequenceTransition","_objectWithoutProperties","_excluded","defaultDuration","animationDefinitions","sequences","elementCache","timeLabels","prevTime","currentTime","totalDuration","_loop","segment","isArray","name","_segment","subject","_segment$","transition","maxDuration","resolveValueSequence","valueKeyframes","valueTransition","valueSequence","elementIndex","numElements","valueKeyframesAsList","keyframesAsList","_valueTransition$dela","delay","_valueTransition$time","times","defaultOffset","_valueTransition$type","type","remainingTransition","_excluded2","_valueTransition$ease","ease","calculatedDelay","numKeyframes","absoluteDelta","isNumberKeyframesArray","delta","abs","springTransition","_objectSpread","secondsToMilliseconds","springEasing","scale","generator","spring","calcGeneratorDuration","maxGeneratorDuration","progress","millisecondsToSeconds","createGeneratorEasing","targetTime","remainder","fillOffset","unshift","isMotionValue","getValueSequence","getSubjectSequence","subjectSequence","getValueTransition","valueSequences","sort","valueOffset","valueEasing","_valueSequence$_i","definition","isNumber","every","animateElements","elementOrSelector","visualElement","animateTarget","createScopedAnimate","valueOrElementOrSequence","animation","animateSingleValue","default","animateSequence","isDOMKeyframes","CardStyle4Blog","_useAnimate","animate","stop","useAnimate","_useAnimate2","_props$index","index","posts","image","startAnimation","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_context","y","opacity","damping","motion","div","whileTap","NavLink","to","state","src","alt","dangerouslySetInnerHTML","__html","String","Blog","_useQuery","useQuery","Callgetapi","keepPreviousData","staleTime","Infinity","suspense","data","isLoading","Loader","h","_Fragment","SocialShare","main","item"],"sourceRoot":""}